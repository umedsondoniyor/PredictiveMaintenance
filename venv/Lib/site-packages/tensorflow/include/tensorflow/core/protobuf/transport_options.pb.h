// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/transport_options.proto

#ifndef PROTOBUF_tensorflow_2fcore_2fprotobuf_2ftransport_5foptions_2eproto__INCLUDED
#define PROTOBUF_tensorflow_2fcore_2fprotobuf_2ftransport_5foptions_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace tensorflow {
class RecvBufRespExtra;
class RecvBufRespExtraDefaultTypeInternal;
extern RecvBufRespExtraDefaultTypeInternal _RecvBufRespExtra_default_instance_;
}  // namespace tensorflow

namespace tensorflow {

namespace protobuf_tensorflow_2fcore_2fprotobuf_2ftransport_5foptions_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2ftransport_5foptions_2eproto

// ===================================================================

class RecvBufRespExtra : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.RecvBufRespExtra) */ {
 public:
  RecvBufRespExtra();
  virtual ~RecvBufRespExtra();

  RecvBufRespExtra(const RecvBufRespExtra& from);

  inline RecvBufRespExtra& operator=(const RecvBufRespExtra& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RecvBufRespExtra(RecvBufRespExtra&& from) noexcept
    : RecvBufRespExtra() {
    *this = ::std::move(from);
  }

  inline RecvBufRespExtra& operator=(RecvBufRespExtra&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RecvBufRespExtra& default_instance();

  static inline const RecvBufRespExtra* internal_default_instance() {
    return reinterpret_cast<const RecvBufRespExtra*>(
               &_RecvBufRespExtra_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RecvBufRespExtra* other);
  friend void swap(RecvBufRespExtra& a, RecvBufRespExtra& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RecvBufRespExtra* New() const PROTOBUF_FINAL { return New(NULL); }

  RecvBufRespExtra* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RecvBufRespExtra& from);
  void MergeFrom(const RecvBufRespExtra& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RecvBufRespExtra* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes tensor_content = 1;
  void clear_tensor_content();
  static const int kTensorContentFieldNumber = 1;
  const ::std::string& tensor_content() const;
  void set_tensor_content(const ::std::string& value);
  #if LANG_CXX11
  void set_tensor_content(::std::string&& value);
  #endif
  void set_tensor_content(const char* value);
  void set_tensor_content(const void* value, size_t size);
  ::std::string* mutable_tensor_content();
  ::std::string* release_tensor_content();
  void set_allocated_tensor_content(::std::string* tensor_content);

  // @@protoc_insertion_point(class_scope:tensorflow.RecvBufRespExtra)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr tensor_content_;
  mutable int _cached_size_;
  friend struct protobuf_tensorflow_2fcore_2fprotobuf_2ftransport_5foptions_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RecvBufRespExtra

// bytes tensor_content = 1;
inline void RecvBufRespExtra::clear_tensor_content() {
  tensor_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RecvBufRespExtra::tensor_content() const {
  // @@protoc_insertion_point(field_get:tensorflow.RecvBufRespExtra.tensor_content)
  return tensor_content_.GetNoArena();
}
inline void RecvBufRespExtra::set_tensor_content(const ::std::string& value) {
  
  tensor_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.RecvBufRespExtra.tensor_content)
}
#if LANG_CXX11
inline void RecvBufRespExtra::set_tensor_content(::std::string&& value) {
  
  tensor_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.RecvBufRespExtra.tensor_content)
}
#endif
inline void RecvBufRespExtra::set_tensor_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tensor_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.RecvBufRespExtra.tensor_content)
}
inline void RecvBufRespExtra::set_tensor_content(const void* value, size_t size) {
  
  tensor_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.RecvBufRespExtra.tensor_content)
}
inline ::std::string* RecvBufRespExtra::mutable_tensor_content() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.RecvBufRespExtra.tensor_content)
  return tensor_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RecvBufRespExtra::release_tensor_content() {
  // @@protoc_insertion_point(field_release:tensorflow.RecvBufRespExtra.tensor_content)
  
  return tensor_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RecvBufRespExtra::set_allocated_tensor_content(::std::string* tensor_content) {
  if (tensor_content != NULL) {
    
  } else {
    
  }
  tensor_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tensor_content);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RecvBufRespExtra.tensor_content)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tensorflow_2fcore_2fprotobuf_2ftransport_5foptions_2eproto__INCLUDED
